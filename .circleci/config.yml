version: 2.1

orbs:
  hmpps: ministryofjustice/hmpps@8

  test-orb:
    version: 2.1

    description: >
      HMPPS projects reusable circleci config

    display:
      home_url: "https://github.com/ministryofjustice/hmpps-circleci-orb"
      source_url: "https://github.com/ministryofjustice/hmpps-circleci-orb"

    orbs:
      mem: circleci/rememborb@0.0.2
      aws-cli: circleci/aws-cli@1.2.1
      kubernetes: circleci/kubernetes@1.3.0
      helm: circleci/helm@1.2.0
      slack: circleci/slack@4.12.5
      snyk: snyk/snyk@1.1.2
      gradle: circleci/gradle@2.2.0
      owasp: entur/owasp@0.0.17
      jira: circleci/jira@2.1.0

    jobs:
      install_git_lfs:
        description: Install Git LFS
        steps:
          - run:
              name: Install Git LFS
              command: |
                curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash
                DEBIAN_FRONTEND=noninteractive sudo apt-get install -y --no-install-recommends git-lfs
                git lfs install
      my_job_test_dlc:
        description: >
          Build docker image, also creates an app version string and pushes image to repo.
        docker:
          - image: 'cimg/python:3.10'
        parameters:
          image_name:
            type: string
            default: "quay.io/hmpps/${CIRCLE_PROJECT_REPONAME}"
          dockerfile_dir:
            type: string
            default: "."
          additional_docker_build_args:
            type: string
            default: ""
          no_output_timeout:
            type: string
            default: 30m
            description: Configure the no_output_timeout setting for the container build step
          snyk-scan:
            type: boolean
            default: false
          snyk-org:
            type: string
            default: digital-probation-services
          snyk-target-file:
            type: string
            default: Dockerfile
          snyk-fail-build:
            type: boolean
            default: true
          snyk-threshold:
            type: enum
            enum: [ "low", "medium", "high" ]
            default: "high"
          snyk-args:
            type: string
            default: ""
          git-lfs:
            type: boolean
            default: false
          jira_update:
            type: boolean
            default: false
            description: When true, updates any referenced Jira tickets with build status. Note that Jira integration must be enabled in your CircleCI project settings.
          pipeline_id:
            type: string
            default: ""
            description: Required if jira_update is set (otherwise the Notify Jira job will pass but do nothing), passed in as << pipeline.id >>
          pipeline_number:
            type: integer
            default: 0
            description: Required if jira_update is set, passed in as << pipeline.number >>
        steps:
          - when:
              condition: << parameters.git-lfs >>
              steps:
                - install_git_lfs
          - checkout
          - setup_remote_docker:
              docker_layer_caching: true
          - create_app_version
          - run:
              name: Create IMAGE_NAME env var
              command: |
                IMAGE_NAME="<< parameters.image_name >>"
                echo "export IMAGE_NAME=$IMAGE_NAME" >> $BASH_ENV
          - mem/remember:
              env_var: IMAGE_NAME
              value: "${IMAGE_NAME}"
          - run:
              name: Setup buildx
              command: |
                docker context create multi-arch-build
                docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
                docker run --rm --privileged tonistiigi/binfmt --install all
                docker buildx create --use multi-arch-build --platform linux/arm64,linux/amd64 --name="${CIRCLE_PROJECT_REPONAME}"
          - run:
              name: quay.io login
              command: docker login -u="${QUAYIO_USERNAME}" -p="${QUAYIO_PASSWORD}" quay.io
          - run:
              name: Build and publish container image
              no_output_timeout: << parameters.no_output_timeout >>
              command: |
                docker buildx build \
                  --platform linux/amd64,linux/arm64 --pull \
                  --progress plain \
                  --rm=false << parameters.dockerfile_dir >> \
                  --build-arg BUILD_NUMBER=$APP_VERSION \
                  --build-arg GIT_REF=$CIRCLE_SHA1 \
                  --build-arg GIT_BRANCH=$CIRCLE_BRANCH \
                  --tag "${IMAGE_NAME}:${APP_VERSION}" \
                  --tag "${IMAGE_NAME}:latest" \
                  --label "maintainer=dps-hmpps@digital.justice.gov.uk" \
                  --label "app.version=${APP_VERSION}" \
                  --label "build.version=${APP_VERSION}" \
                  --label "build.number=${CIRCLE_BUILD_NUM}" \
                  --label "build.url=${CIRCLE_BUILD_URL}" \
                  --label "build.gitref=${CIRCLE_SHA1}" \
                  --push \
                  << parameters.additional_docker_build_args >>

          - when:
              condition: << parameters.snyk-scan >>
              steps:
                - snyk/scan:
                    project: "${CIRCLE_PROJECT_REPONAME}-docker"
                    organization: << parameters.snyk-org >>
                    docker-image-name: "${IMAGE_NAME}:${APP_VERSION}"
                    target-file: << parameters.dockerfile_dir >>/<< parameters.snyk-target-file >>
                    severity-threshold: << parameters.snyk-threshold >>
                    fail-on-issues: << parameters.snyk-fail-build >>
                    additional-arguments: << parameters.snyk-args >>
                    monitor-on-build: true

          - when:
              condition: << parameters.jira_update >>
              steps:
                - jira/notify:
                    pipeline_id: << parameters.pipeline_id >>
                    pipeline_number: << parameters.pipeline_number >>


parameters:
  alerts-slack-channel:
    type: string
    default: visits-alerts
  releases-slack-channel:
    type: string
    default: visits-alerts

jobs:
  validate:
    executor:
      name: hmpps/java_localstack_postgres
      jdk_tag: "21.0"
      localstack_tag: "3"
      services: "sns,sqs"
      # Because we have no fly way here to create a DB and tables tests on the DB and tables in local host is not possible
      postgres_tag: "14"
      postgres_username: "visit_scheduler"
      postgres_password: "visit_scheduler"
    environment:
      _JAVA_OPTIONS: -Xmx500m -XX:ParallelGCThreads=2 -XX:ConcGCThreads=2 -Djava.util.concurrent.ForkJoinPool.common.parallelism=2 -Dorg.gradle.daemon=false -Dkotlin.compiler.execution.strategy=in-process
    steps:
      - checkout
      - run:
          name: Wait for Postgres to be ready
          command: ./postgres-check.sh
      - restore_cache:
          keys:
            - gradle-{{ checksum "build.gradle.kts" }}
            - gradle-
      - hmpps/wait_till_ready_postgres
      - run:
          command: ./gradlew check
      - save_cache:
          paths:
            - ~/.gradle
          key: gradle-{{ checksum "build.gradle.kts" }}
      - store_test_results:
          path: build/test-results
      - store_artifacts:
          path: build/reports/tests
      - persist_to_workspace:
          root: .
          paths:
            - build/libs
            - build.gradle.kts

workflows:
  version: 2
  build-test-and-deploy:
    when:
      and:
        - equal: [ << pipeline.git.branch >> ]
    jobs:
      - validate:
          filters:
            tags:
              ignore: /.*/
      - hmpps/helm_lint:
          name: helm_lint
      - test-orb/my_job_test_dlc:
          name: build_docker
      - request-dev-approval:
          type: approval
      - hmpps/deploy_env:
          name: deploy_dev
          env: "dev"
          jira_update: true
          pipeline_id: <<pipeline.id>>
          pipeline_number: <<pipeline.number>>
          context: hmpps-common-vars
          filters:
            branches:
              only:
                - << pipeline.git.branch >>
          requires:
            - validate
            - build_docker
            - helm_lint
            - request-dev-approval
      - request-staging-approval:
          type: approval
          requires:
            - deploy_dev
      - hmpps/deploy_env:
          name: deploy_staging
          env: "staging"
          context:
            - hmpps-common-vars
            - hmpps-prison-visits-testing-helper-api-stage
          requires:
            - request-staging-approval


  security:
    triggers:
      - schedule:
          cron: "21 7 * * 1-5"
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/gradle_owasp_dependency_check:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - hmpps-common-vars
          jdk_tag: "21.0"
      - hmpps/trivy_latest_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - hmpps-common-vars
      - hmpps/veracode_pipeline_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - veracode-credentials
            - hmpps-common-vars
  security-weekly:
    triggers:
      - schedule:
          cron: "36 8 * * 1"
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/veracode_policy_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - veracode-credentials
            - hmpps-common-vars
